#+TITLE: Packup - 一款通过U盘快速共享Arch Linux升级包的脚本
#+URL: https://www.ostechnix.com/install-packages-offline-arch-linux/
#+AUTHOR: lujun9972
#+TAGS: archlinux tools
#+DATE: [2017-11-06 一 12:59]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil


不久前, 我们发布了一片关于如何 [[https://www.ostechnix.com/install-softwares-offline-ubuntu-16-04/][在Ubuntu及其衍生版中离线安装package]] 的文章. 今天我们要来聊聊在Arch Linux上如何实现同样的事情. 
若你拥有大量的Arch Linux系统，通过这种方式可以节省大量的互联网带宽. 你无需重复地通过网络下载package和升级系统. 
只需要升级一台Arch Linux系统 (假设我们称之为主系统或者服务段系统) 然后将下载的更新包分发给其他Arch系统就行了.
其他系统是否有互联网连接并不重要. 这就是 Packup 的方便之处. 它是一个能让你通过U盘/外置硬盘分享更新的脚本
其主要目的在于减少互联网带宽的消耗并且让那些离线的系统也能用pacman或pacaur作为包管理器.
本教程简要描述一下如何通过U盘和外部磁盘将升级包共享给离线的 Arch Linux 系统.

Packup – A Script To Quickly Share Updates Via USB Drive In Arch Linux

为了方便展示, 我们使用两个 Arch Linux 系统, 一个有互联网连接，一个没有互联网连接.
同时我们还需要一个空间足够U盘或者外置硬盘.

* 共同的步骤（在两台Arch Linux上都要操作）

在所有系统上都安装 =NodeJS=. NodeJS在默认的仓库中就有, 因此你可以使用如下Pacman命令安装.

#+BEGIN_SRC shell
  sudo pacman -S nodejs npm
#+END_SRC

如果你想要传输AUR package, 你还需要安装 Pacaur. 具体方法请查看以下链接.

+ [[https://www.ostechnix.com/install-pacaur-arch-linux/][How To Install Pacaur In Arch Linux]]

* 在线系统上的步骤

将U盘或外置硬盘接入在线系统. 切换到U盘挂载目录并克隆 Packup 项目.

#+BEGIN_SRC shell
  cd /run/media/sk/bce5f14a-097a-41c5-88ec-c38e20410182/

  git clone https://github.com/cookiengineer/packup;
#+END_SRC

Packup GitHub 仓库内容就会克隆到你的U盘或外置硬盘的一个名为 “Packup” 的目录中.

进入 “Packup” 目录:

#+BEGIN_SRC shell
  cd packup/
#+END_SRC

运行下面命令来备份所有本地可用的package以及package索引到U盘中.

#+BEGIN_SRC shell
  ./backup.js;
#+END_SRC

根据可用package的数量，这个步骤可能会花一点时间.

最后运行命令:

#+BEGIN_SRC shell
  sync;
#+END_SRC

在拔出U盘之前，请一定记得运行上面这条命令.

现在可以拔出U盘了，然后开始操作离线的系统.

* 离线系统操作步骤

插入U盘，并进入 “Packup” 目录. 这里我把U盘挂载到 /mnt 中.

#+BEGIN_SRC shell
  cd /mnt/packup/
#+END_SRC

下一步，更新pacman的索引信息:

#+BEGIN_SRC shell
  sudo cp ./sync/*.db /var/lib/pacman/sync/;
#+END_SRC

然后, 运行下面命令:

#+BEGIN_SRC shell
  ./upgrade.js;
#+END_SRC

该命令会现实用于手工从本地更新package的pacman命令(使用pacman -U).

#+BEGIN_SRC shell
  :: Execute this to upgrade from local package cache:

  cd "/run/.../packup"; sudo pacman -U gcc-7.1.1-4-x86_64.pkg.tar.xz gdb-common-8.0-1-x86_64.pkg.tar.xz
#+END_SRC

另外, 如果你有缺失的package需要从主系统上下载(在线系统), 它还会现实你需要在另一台机上要执行的命令(使用 “pacman -Sw –cachedir”).

#+BEGIN_SRC shell
  :: Execute this to download upgrades into local package cache:

  cd "/run/.../packup"; sudo pacman -Sw --cachedir "/run/.../packup" geoip ghostscript;
#+END_SRC

你可以在在线系统上执行上面输出的命令,就会下载缺失的包，然后在离线系统上再次运行一次更新命令来更新package. 很不错吧!

完了之后, 你可以按下面方法清理U盘上的旧package.

#+BEGIN_SRC shell
  cd /path/to/usb/drive/packup/

  ./clean.js;

  sync;
#+END_SRC

在拔出U盘前别忘了运行 “sync” 命令.

就是这样. 如你所见, Packup 非常简单, 但却非常有用，值得常备身边. 如果你有很多的 Arch Linux 系统, 这个工具会帮你节省大量的互联网带宽.

真赞!
