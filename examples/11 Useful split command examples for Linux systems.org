#+TITLE: 11个应用案例教你使用split
#+URL: https://www.linuxtechi.com/split-command-examples-for-linux-unix/
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2017-11-16 四 10:44]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil


‘split‘ 命令是一个Linux和UNIX系统中用于将文件拆分成片的命令. 拆分的结果文件默认为1000行，且以 ‘x’ 打头.

本文我们会展示11个使用split命令的案例. 此外我们还会展示如何将分拆的文件合并回原始文件. 
split 命令的语法为:

#+BEGIN_SRC shell
  # split {options} {file_name} {prefix}
#+END_SRC

split 命令的常用参数如下:

[[https://www.linuxtechi.com/wp-content/uploads/2017/11/Split-Command-Options-Linux.jpg]]


* 例1) 拆分文件

假设有一个文件 tuxlap.txt, 使用下面命令可以将它拆分成片

#+BEGIN_SRC shell
  [root@linuxtechi ~]# split tuxlap.txt
  [root@linuxtechi ~]# ll
  total 32
  -rw-------. 1 root root  980 Aug 12 00:11 anaconda-ks.cfg
  -rw-r--r--. 1 root root 9607 Nov 11 03:22 tuxlap.txt
  -rw-r--r--. 1 root root 8744 Nov 11 03:23 xaa
  -rw-r--r--. 1 root root  863 Nov 11 03:23 xab
  [root@linuxtechi ~]#
#+END_SRC

如上所示, ‘tuxlab.txt‘ 被拆分成两个文件，名称分别为 ‘xaa’ 以及 ‘xab’.

* 例2) Split 命令的 verbose 选项

参数 =–verbose= 可以让split运行时输出详细信息, 如下所示:

#+BEGIN_SRC shell
  [root@linuxtechi ~]# split tuxlap.txt --verbose
  creating file ‘xaa’
  creating file ‘xab’
  [root@linuxtechi ~]#
#+END_SRC

* 例3) 指定拆分文件的行数 (-l)

假设我想以指定的行数来拆分文件, 比如200行每个文件，那么可以使用 =-l= 参数.

#+BEGIN_SRC shell
  [root@linuxtechi ~]# split -l200 tuxlap.txt --verbose
  creating file ‘xaa’
  creating file ‘xab’
  creating file ‘xac’
  creating file ‘xad’
  creating file ‘xae’
  creating file ‘xaf’
  [root@linuxtechi ~]#
#+END_SRC

检查一下每个文件多少行

#+BEGIN_SRC shell
  [root@linuxtechi ~]# wc -l xa*
  200 xaa
  200 xab
  200 xac
  200 xad
  200 xae
   91 xaf
  1091 total
  [root@linuxtechi ~]#
#+END_SRC

* 例4) 使用-b参数指定拆分文件的大小 

我们可以指定文件大小来拆分文件. 只需要准照以下语法拆分文件就行，大小的单位可以是 bytes, KB , MB 以及 GB

#+BEGIN_SRC shell
  # split -b{bytes} {file_name}

  # split -b nK {file_name} // n is the numeric value

  # split -b nM {file_name} // n is the numeric value

  # split -b nG {file_name} // n is the numeric value
#+END_SRC

以byte为单位:

#+BEGIN_SRC shell
  [root@linuxtechi ~]# split -b2000000 tuxlap.txt
#+END_SRC

以KB为单位:

#+BEGIN_SRC shell
  [root@linuxtechi ~]# split -b 50K tuxlap.txt
#+END_SRC

以MB为单位:

#+BEGIN_SRC shell
  [root@linuxtechi ~]# split -b 50M tuxlap.txt
#+END_SRC

以GB为单位:

#+BEGIN_SRC shell
  [root@linuxtechi ~]# split -b 1G tuxlap.txt
#+END_SRC

* 例5) 拆分出来的文件以数字结尾而不是字母结尾 (-d)

从上面的例子中可以看到split命令的结果文件是以字母结尾的，像这样: xaa, xab….. xan , 使用 ‘-d’ 选项就会创建出以数字结尾的拆分结果文件了

#+BEGIN_SRC shell
  [root@linuxtechi ~]# split -d tuxlap.txt

  [root@linuxtechi ~]# ll
  total 1024256
  -rw-------. 1 root root        980 Aug 12 00:11 anaconda-ks.cfg
  -rwx------. 1 root root 1048576000 Nov 11 03:54 linux-lite.iso
  -rw-r--r--. 1 root root     120010 Nov 11 04:39 tuxlap.txt
  -rw-r--r--. 1 root root      11998 Nov 11 04:41 x00
  -rw-r--r--. 1 root root      12000 Nov 11 04:41 x01
  -rw-r--r--. 1 root root      12000 Nov 11 04:41 x02
  -rw-r--r--. 1 root root      12000 Nov 11 04:41 x03
  -rw-r--r--. 1 root root      12000 Nov 11 04:41 x04
  -rw-r--r--. 1 root root      12000 Nov 11 04:41 x05
  -rw-r--r--. 1 root root      12000 Nov 11 04:41 x06
  -rw-r--r--. 1 root root      12000 Nov 11 04:41 x07
  -rw-r--r--. 1 root root      12000 Nov 11 04:41 x08
  -rw-r--r--. 1 root root      12000 Nov 11 04:41 x09
  -rw-r--r--. 1 root root         12 Nov 11 04:41 x10
  [root@linuxtechi ~]#
#+END_SRC

* 例6) 指定拆分结果文件的前缀

我们可以指定拆分结果文件的前缀. 举个例子

语法为:

#+BEGIN_SRC shell
  # split {file_name} {prefix_name}
#+END_SRC

#+BEGIN_SRC shell
  [root@linuxtechi ~]# split tuxlap.txt split_file_

  [root@linuxtechi ~]# ll
  total 1024248
  -rw-------. 1 root root        980 Aug 12 00:11 anaconda-ks.cfg
  -rwx------. 1 root root 1048576000 Nov 11 03:54 linux-lite.iso
  -rw-r--r--. 1 root root      11998 Nov 11 04:56 split_file_aa
  -rw-r--r--. 1 root root      12000 Nov 11 04:56 split_file_ab
  -rw-r--r--. 1 root root      12000 Nov 11 04:56 split_file_ac
  -rw-r--r--. 1 root root      12000 Nov 11 04:56 split_file_ad
  -rw-r--r--. 1 root root      12000 Nov 11 04:56 split_file_ae
  -rw-r--r--. 1 root root      12000 Nov 11 04:56 split_file_af
  -rw-r--r--. 1 root root      12000 Nov 11 04:56 split_file_ag
  -rw-r--r--. 1 root root      12000 Nov 11 04:56 split_file_ah
  -rw-r--r--. 1 root root      12000 Nov 11 04:56 split_file_ai
  -rw-r--r--. 1 root root      12000 Nov 11 04:56 split_file_aj
  -rw-r--r--. 1 root root         12 Nov 11 04:56 split_file_ak
  -rw-r--r--. 1 root root     120010 Nov 11 04:39 tuxlap.txt
  [root@linuxtechi ~]#
#+END_SRC

* 例7) 指定拆分结果文件的个数 (-n)

假设我们想将一个iso文件拆分成5块结果文件. 使用 ‘-n’ 选项设置结果文件的个数.

#+BEGIN_SRC shell
  [root@linuxtechi ~]# split -n5 linux-lite.iso
#+END_SRC

使用 =ll= 验证一下拆分结果文件.

#+BEGIN_SRC shell
  [root@linuxtechi ~]# ll
  total 2048124
  -rw-------. 1 root root        980 Aug 12 00:11 anaconda-ks.cfg
  -rwx------. 1 root root 1048576000 Nov 11 03:54 linux-lite.iso
  -rw-r--r--. 1 root root     120010 Nov 11 04:39 tuxlap.txt
  -rw-r--r--. 1 root root  209715200 Nov 11 05:22 xaa
  -rw-r--r--. 1 root root  209715200 Nov 11 05:22 xab
  -rw-r--r--. 1 root root  209715200 Nov 11 05:22 xac
  -rw-r--r--. 1 root root  209715200 Nov 11 05:23 xad
  -rw-r--r--. 1 root root  209715200 Nov 11 05:23 xae
  [root@linuxtechi ~]#
#+END_SRC

* 例8) 禁止产生0字节的结果文件 (-e)

当将一个小文件拆分成很多的结果文件时,可能会产生0字节的文件, 使用 =-e= 选项可以防止产生0字节的文件

#+BEGIN_SRC shell
  [root@linuxtechi ~]# split -n60 -e tuxlap.txt
  [root@linuxtechi ~]# ls -l x*
  -rw-r--r--. 1 root root 2000 Nov 11 05:34 xaa
  -rw-r--r--. 1 root root 2000 Nov 11 05:34 xab
  -rw-r--r--. 1 root root 2000 Nov 11 05:34 xac
  -rw-r--r--. 1 root root 2000 Nov 11 05:34 xad
  -rw-r--r--. 1 root root 2000 Nov 11 05:34 xae
  -rw-r--r--. 1 root root 2000 Nov 11 05:34 xaf
  -rw-r--r--. 1 root root 2000 Nov 11 05:34 xag
  -rw-r--r--. 1 root root 2000 Nov 11 05:34 xah
  .............
  -rw-r--r--. 1 root root 2000 Nov 11 05:34 xce
  -rw-r--r--. 1 root root 2000 Nov 11 05:34 xcf
  -rw-r--r--. 1 root root 2000 Nov 11 05:34 xcg
  -rw-r--r--. 1 root root 2010 Nov 11 05:34 xch
  [root@linuxtechi ~]#
#+END_SRC

* 例9) 指定拆分结果文件的后缀长度 (-a option)

使用下面命令会将一个iso文件按500M为限进行拆分，而且拆分的结果文件后缀长度为3:

#+BEGIN_SRC shell
  [root@linuxtechi ~]# split -b 500M linux-lite.iso -a 3

  [root@linuxtechi ~]# ll
  total 2048124
  -rw-------. 1 root root        980 Aug 12 00:11 anaconda-ks.cfg
  -rwx------. 1 root root 1048576000 Nov 11 03:54 linux-lite.iso
  -rw-r--r--. 1 root root     120010 Nov 11 04:39 tuxlap.txt
  -rw-r--r--. 1 root root  524288000 Nov 11 05:43 xaaa
  -rw-r--r--. 1 root root  524288000 Nov 11 05:43 xaab
  [root@linuxtechi ~]#
#+END_SRC

* 例10) 拆分ISO文件后又合并成单个文件

假设一个 Windows Server ISO 文件有 4.2 GB大小，由于体积太大无法通过scp上传到远程服务器上.

为了解决这个问题,我们将ISO拆分成 n 份，传到远程服务器上后再用 =cat= 命令组合起来

#+BEGIN_SRC shell
  [root@linuxtechi ~]# split -b 800M Windows2012r2.iso Split_IS0_
#+END_SRC

使用 =ll= 命令查看拆分结果文件,

#+BEGIN_SRC shell
  [root@linuxtechi ~]# ll
  total 8871788
  -rw-------. 1 root root        980 Aug 12 00:11 anaconda-ks.cfg
  -rw-r--r--. 1 root root  838860800 Nov 11 06:29 Split_IS0_aa
  -rw-r--r--. 1 root root  838860800 Nov 11 06:29 Split_IS0_ab
  -rw-r--r--. 1 root root  838860800 Nov 11 06:29 Split_IS0_ac
  -rw-r--r--. 1 root root  838860800 Nov 11 06:29 Split_IS0_ad
  -rw-r--r--. 1 root root  838860800 Nov 11 06:29 Split_IS0_ae
  -rw-r--r--. 1 root root  347987968 Nov 11 06:29 Split_IS0_af
  -rw-r--r--. 1 root root     120010 Nov 11 04:39 tuxlap.txt
  -rwx------. 1 root root 4542291968 Nov 11 06:03 Windows2012r2.iso
  [root@linuxtechi ~]#
#+END_SRC

现在使用scp上传这些文件到远程服务器上,然后使用 =cat= 命令合并这些文件

#+BEGIN_SRC shell
  [root@linuxtechi ~]# cat Split_IS0_a* > Windows_Server.iso
  [root@linuxtechi ~]#
#+END_SRC

* 例11) 使用 md5sum 验证合并文件的完整性

在例子10中，我们将拆分结果文件合并起来了, 之后我们可以使用 =md5sum= 来验证完整性. 像这样:

#+BEGIN_SRC shell
  [root@linuxtechi ~]# md5sum Windows2012r2.iso
  5b5e08c490ad16b59b1d9fab0def883a  Windows2012r2.iso
  [root@linuxtechi ~]#

  [root@linuxtechi ~]# md5sum Windows_Server.iso
  5b5e08c490ad16b59b1d9fab0def883a  Windows_Server.iso
  [root@linuxtechi ~]#
#+END_SRC

上面的结果确认了文件是完整的，拆分的文件成功的恢复了.
